- name: "CaaS Monthly Meeting"
  date: 2024-07-11 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/94396923932?pwd=9MDrbK3nQgGYjqkEZILGO7ne4YczA9.1)"
  label: caas_11Jul2024
  agenda:
    - title: "Automatic Differentiation in Roofit for Fast and Accurate Likelihood Fits"
      speaker:
        image: "https://compiler-research.org/images/team/Vaibhav.jpg"
        name: "Vaibhav Thakkar"
        bio: |
          Vaibhav Thakkar is currently a research Intern at CERN, working with
          the compiler research group at Princeton University (US) on the
          project of compile-time automatic differentiation (Clad) in C++ for
          scientific computing applications. Previously, he earned my bachelor's
          in technology in Electrical Engineering from IIT Kanpur in India and
          worked as a software engineer for a couple of years after graduation.
      description: |
        RooFit is a widely used data analysis library in High-energy physics
        experiments at CERN, which requires minimizing likelihoods with
        thousands of free parameters spread over hundreds of likelihood
        components. To iteratively find the minimum of a likelihood, one
        generally has to know the gradient of the likelihood with respect to all
        free parameters. Previously, these were calculated using numerical
        differentiation, which requires varying one parameter at a time and
        reevaluating the full likelihood. Although complete reevaluation can be
        prevented by a caching mechanism, it incurs a significant overhead in
        bookkeeping. This talk discusses the recent integration of automatic
        differentiation (AD) in RooFit for these gradient computations using
        Clad, a compile-time AD library for C++ codebases. We also present the
        efficiency improvements with the recently released Atlas and CMS Higgs
        models.
      slides: "/assets/presentations/Vaibhav_ICHEP.pdf"
    - title: Update
      speaker: Vassil Vassilev
      slides: "/assets/presentations/CR_11_07_2024.pdf"
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 5 Sep 1700

- name: "CaaS Monthly Meeting"
  date: 2024-06-06 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/91331193595?pwd=FW3LpbZykgvVh5QwAEMNMA4Vk3TqOT)"
  label: caas_06Jun2024
  agenda:
    - title: Update
      speaker: Vassil Vassilev
      slides: "/assets/presentations/CR_06_06_2024.pdf"
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 11 Jul 1700

- name: "CaaS Monthly Meeting"
  date: 2024-04-04 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/99894195259?pwd=S1BRclMyY0NlQUx6bjBadldaU2t0UT09)"
  label: caas_04Apr2024
  agenda:
    - title: Update
      speaker: Vassil Vassilev
      slides: "/assets/presentations/CR_04_04_2024.pdf"
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 6 Jun 1700

- name: "CaaS Monthly Meeting"
  date: 2024-03-07 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/99894195259?pwd=S1BRclMyY0NlQUx6bjBadldaU2t0UT09)"
  label: caas_07Mar2024
  agenda:
    - title: "IDD – A Platform Enabling Differential Debugging"
      speaker:
        image: "https://media.licdn.com/dms/image/C4E03AQHhvshc5Qb0ow/profile-displayphoto-shrink_800_800/0/1517263864752?e=1715212800&v=beta&t=6GUx6zvVq4rz1Va5rXGnla4LfH6b8Sd6rVWt-UYgAHM"
        name: "Martin Vasilev"
        bio: |
          Martin Vassilev has research interest in the area of the compiler
          construction and analysis of complex software systems. He has obtained
          his PhD in 2020 in the University of Plovdiv "Paisii Hilendarski"
          where he continued to develop his academic career. He is now senior
          assistant professor in the Faculty of Mathematics and Informatics. He
          continues to participate into the development of open source systems
          like IDD and others.
      description: |
        Debugging is a very time consuming task which is not well supported by
        existing tools. The existing methods do not provide tools enabling
        optimal developers’ productivity when debugging regressions in complex
        systems. It is described in this presentation a possible solution aiding
        differential debugging. The differential debugging technique performs
        analysis of the regressed system and identifying the cause of the
        unexpected behavior by comparing to a previous version of the same
        system. The prototype, idd, inspects two versions of the executable – a
        baseline and a regressed version. The interactive debugging session runs
        side by side both executables and allows to examine and to compare
        various internal states. The architecture can work with multiple
        information sources comparing data from different tools. Also it will be
        shown how idd can detect performance regressions using information from
        third-party performance facilities.
    - title: Update
      speaker: Vassil Vassilev
      slides: "/assets/presentations/CR_07_03_2024.pdf"
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 4 Apr 1700

- name: "CaaS Monthly Meeting"
  date: 2024-02-01 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92811687505?pwd=Zk13akpuUlowbjhqK0t1TDVPbS9Ydz09)"
  label: caas_01Feb2024
  agenda:
    - title: "User-Schedulable Languages: Exo and Beyond"
      speaker:
        image: "https://media.licdn.com/dms/image/C5603AQHzxnclCX9tEw/profile-displayphoto-shrink_800_800/0/1597949617547?e=1712188800&v=beta&t=-vVNhjYV5MvUcua07Go3u6nPi43NVmPwnaIyULx8IOI"
        name: "Yuka Ikarashi"
        bio: |
          Yuka Ikarashi is a fourth-year PhD candidate at MIT CSAIL, advised
          by Jonathan Ragan-Kelley. She is interested in creating compiler
          systems and programming languages for real-world applications. She
          is a co-creator of the Exo programming language and has been a
          developer for other compiler frameworks such as Clang/LLVM and ROOT.
          She previously worked at Apple, Amazon, and CERN. She received
          Masason Foundation Fellowship and Funai Foundation Fellowship awards.
      description: |
        Single-core performance has long been saturated, and it is critical to
        exploit the peak performance of heterogeneous accelerators and
        specialized instructions in many applications. Because compilers are
        difficult to extend to support diverse and rapidly evolving hardware
        targets, and automatic optimization is often insufficient to guarantee
        state-of-the-art performance, high-performance libraries are commonly
        still coded and optimized by hand, at great expense, in low-level C and
        assembly. User schedulable languages, or USLs in short, have been
        proposed to address the challenge by decoupling algorithms and
        scheduling. In this talk, I will focus on one such USL, Exo, based on
        the principle of exocompilation: externalizing target-specific code
        generation support and optimization policies to user-level code. Exo
        allows custom hardware instructions, specialized memories, and
        accelerator configuration states to be defined in user libraries.
        I will also talk about other projects that borrow the idea from USLs
        and lessons we learned from the industry adoption of Exo.
    - title: Update
      speaker: Vassil Vassilev
      slides: "/assets/presentations/CR_01_02_2024.pdf"
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 7 Mar 1700

- name: "CaaS Monthly Meeting"
  date: 2024-01-11 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92811687505?pwd=Zk13akpuUlowbjhqK0t1TDVPbS9Ydz09)"
  label: caas_11Jan2024
  agenda:
    - title: "Open Source Software For The Win"
      speaker: "Saqib A (QuillPusher)"
      description: |
        This talk will cover notable OSS achievements, especially those that are
        in contrast to big tech, striving to protect the consumers and their
        data.

        We'll start with GrapheneOS, a hardened fork of Android AOSP. Notably,
        GrapheneOS makes upstream contributions to the Android Open Source
        Project (AOSP) and other upstream projects, and many of its features
        were implemented in AOSP, Linux, LLVM, and other projects that
        GrapheneOS is based on.

        GrapheneOS substantially expands the standard mitigations for memory
        corruption vulnerabilities, and some of these features are designed to
        directly catch the memory corruption bugs either via an explicit check
        or memory protection and abort the program to prevent them from being
        exploited.
      slides: "/assets/presentations/Saqib-OSSFTW.pdf"
    - title: Update
      speaker: Vassil Vassilev
      slides: "/assets/presentations/CR_11_01_2024.pdf"
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 1 Feb 1700

- name: "CaaS Monthly Meeting"
  date: 2023-12-07 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/96034182995?pwd=QjFwaDVqazdFVGhvOHhyOFc1OVRZdz09)"
  label: caas_07Dec2023
  agenda:
    - title: "Compiler-Research.org Status and Plans"
      speaker: "Dr. Vassil Vassilev"
      description: |
        We will describe some of the past, ongoing and future activities of the
        compiler-research group.
      slides: "/assets/presentations/CaaS_07_12_2023.pdf"
    - title: "Algorithmic Differentiation in Monte-Carlo Particle Simulations"
      speaker: "Max Aehle"
      description: |
        Monte-Carlo simulators like Geant4 are heavily used in High Energy
        Physics to simulate the interaction between particles and the detector
        matter. Integrating algorithmic differentiation (AD) into such codes,
        e.g. in order to obtain gradients for design optimization, comes with a
        couple of technical and mathematical challenges.

        On the technical side, most AD tools are not fully automatic for the
        entire language standard, but require certain manual interventions or
        exclude certain language constructs. The size and complexity of Geant4
        with about one million lines of C++ code can turn seemingly little
        restrictions into a massive amount of effort required before being able
        to obtain algorithmic derivatives. In the first part of this talk, we
        will give a brief description of our novel AD tool Derivgrind, which
        brings the development efforts close to the possible minimum because it
        operates on the machine code of the compiled primal program. We will
        then demonstrate how it allows to compute correct algorithmic
        derivatives in a very artificial setup using Geant4 code.

        On the mathematical side, stochasticity and the frequent use of
        non-differentiable operations like comparisons constitute severe
        challenges. While AD allows us to obtain floating-point-accurate
        derivatives of the precise sequence of real-arithmetic operations
        conducted by the primal program, they may come with very large
        variances, and their expected values may disagree with the derivative
        of the function represented by the Monte-Carlo simulation in the limit
        where the number of samples goes to infinity. These challenges need to
        be assessed and attacked based on a mathematical understanding of the
        computations performed by the Monte-Carlo simulation. In the second part
        of this talk, we will report on recent progress in this area.
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 11 Jan 1700

- name: "CaaS Monthly Meeting"
  date: 2023-09-20 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/96468729098?pwd=bkpCVHVXRmdMNzE4Y3BKSWZLZVNqUT09)"
  label: caas_20Sep2023
  agenda:
    - title: "C++ as a service - rapid software development and dynamic interoperability with python and beyond"
      speaker: "Dr. Vassil Vassilev"
      description: |
        The C++ programming language is used for many numerically intensive
        scientific applications. A combination of performance and solid backward
        compatibility has led to its use for many research software codes over
        the past 20 years. Despite its power, C++ is often seen as difficult to
        learn and inconsistent with rapid application development. Exploration
        and prototyping is slowed down by the long edit-compile-run cycles
        during development.

        In this talk we show how to leverage our experience in interactive C++,
        just-in-time compilation technology (JIT), dynamic optimizations, and
        large scale software development to greatly reduce the impedance
        mismatch between C++ and Python. We show how clang-repl generalizes
        Cling in LLVM upstream to offer a robust, sustainable and
        omnidisciplinary solution for C++ language interoperability. The
        demonstrate how we have:
          * advanced the interpretative technology to provide a state-of-the-art
            C++ execution environment;
          * enabled functionality which can provide native-like, dynamic runtime
            interoperability between C++ and Python; and
          * allowed utilization of heterogeneous hardware.

        The presentation includes interactive session where we demonstrate some
        of the capabilities of our system via the Jupyter interactive
        environment.
      video: "https://youtu.be/be89sF0WLrc"
      slides: "/assets/presentations/V_Vassilev-CaaS_ShowCase.pdf"
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 5 Oct 1700

- name: "CaaS Monthly Meeting"
  date: 2023-07-06 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/95701425283?pwd=TmJsV3FyK3kvU1Y3ZU81)"
  label: caas_06Jul2023
  agenda:
    - title: Update
      speaker: Vassil Vassilev
      slides: "/assets/presentations/CaaS_06_07_2023.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 7 Sep 1700

- name: "CaaS Monthly Meeting"
  date: 2023-06-01 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92890799462?pwd=Tlp0MGJYRHZld05acWhOK0Vwa0YvZz09)"
  label: caas_01Jun2023
  agenda:
    - title: Update
      speaker: Vassil Vassilev
      slides: "/assets/presentations/CaaS_01_06_2023.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 6 Jul 1700

- name: "CaaS Monthly Meeting"
  date: 2023-05-04 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92890799462?pwd=Tlp0MGJYRHZld05acWhOK0Vwa0YvZz09)"
  label: caas_04May2023
  agenda:
    - title: Update
      speaker: Vassil Vassilev
      slides: "/assets/presentations/CaaS_04_05_2023.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil Vassilev
      link: 1 Jun 1700

- name: "CaaS Monthly Meeting"
  date: 2023-04-06 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92890799462?pwd=Tlp0MGJYRHZld05acWhOK0Vwa0YvZz09)"
  label: caas_06Apr2023
  agenda:
    - title: "Numba 2023 and beyond. PIXIE and RVSDG"
      speaker: "Siu Kwan Lam, Stuart Archibald"
      description: |
        The Numba project engineers are undertaking research into some new
        technology in 2023, in this talk two of the larger areas of this
        research will be presented. One part of this research aims to alter the
        typical view of the compilation space as neither being JIT nor AOT, but
        as a user defined continuum of options. A new AOT output format is being
        developed, PIXIE, which helps to provide higher performance runtime
        execution and also allows for cross library/whole program optimisation,
        along with AOT re-specialisation. This talk will present the Numba 2023
        target MVP, it will be able to combine AOT compiled C/C++ libraries from
        Clang based toolchains with JIT compiled Python code to present a
        continuum of compilation options to users based on their desired
        compilation and runtime performance characteristics.

        Another part of the research being undertaken is into Regionalise Value
        State Dependence Graphs (RVSDGs). Its initial use will be to isolate the
        Numba compiler frontend from the ever changing semantics of Python byte
        code (Numba uses this as its input source, it’s a CPython implementation
        detail). It will do this by transforming the CFGs derived from the byte
        code into a structured form, that of the RVSDG. This talk will note some
        of the numerous research opportunities anticipated as a result of using
        this form, particularly with respect to IR design and the expected ease
        with which new compiler passes can be written.
      slides: "/assets/presentations/S_Lam_S_Archibald-CaaS_Numba_PIXIE.pdf"
    - title: Update
      speaker: Garima Singh
      slides: "/assets/presentations/CaaS_06_04_2023.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Garima Singh
      link: 4 May 1700

- name: "CaaS Monthly Meeting"
  date: 2023-03-02 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92890799462?pwd=Tlp0MGJYRHZld05acWhOK0Vwa0YvZz09)"
  label: caas_02Mar2023
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_02_03_2023.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 6 Apr 1700

- name: "CaaS Monthly Meeting"
  date: 2023-02-02 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92890799462?pwd=Tlp0MGJYRHZld05acWhOK0Vwa0YvZz09)"
  label: caas_02Feb2023
  agenda:
    - title: "Multiline input and Windows support in clang-repl"
      speaker: "Sunho Kim, De Anza College, CA"
      description: |
        Efficient multiline input support in clang-repl has been worked on over
        the last months. We formulated a RFC to extend the clang Lexer to
        receive incremental in LLVM community and implemented it with received
        feedbacks considered. Clang Lexer is now capable of lexing buffer
        growing line by line while handling all complicated preprocessor
        expressions correctly. Based on this groundwork, an efficient
        incremental input support was added to clang-repl.

        I will demonstrate these new additions to clang-repl with demoes, talk
        about how do they work under the good, and talk about the future
        direction. I will also briefly show demos of enhanced Windows support
        in clang-repl featuring native static library and SEH exception
        handling.
      video: "https://youtu.be/jc5oj8ooG7s"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_02_02_2023.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 2 Mar 1700

- name: "CaaS Monthly Meeting"
  date: 2023-01-12 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92890799462?pwd=Tlp0MGJYRHZld05acWhOK0Vwa0YvZz09)"
  label: caas_12Jan2023
  agenda:
    - title: "Finding the Higgs on RISC-V"
      speaker: "Jonas Hahnfeld, CERN"
      description: |
        Abstract: RISC-V is a new computer architecture. It currently receives a
        lot of attention from open source developers because the ISA itself is
        royalty free and vendors can create hardware without paying licensing
        fees. As with any new architecture, the software ecosystem has to catch
        up once actual hardware is available. In this talk, I will present the
        current status of Just-In-Time-Compilation support for RISC-V in LLVM,
        how I made clang-repl work on RISC-V to interpret C++ code and
        eventually bring up the whole of Cling and ROOT to run a first physics
        analysis on this new architecture.
      slides: "/assets/presentations/J_Hahnfeld-HiggsRISC-V.pdf"
      video: "https://youtu.be/3PWeLGrF41g"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_12_01_2023.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 2 Feb 1700

- name: "CaaS Monthly Meeting"
  date: 2022-11-03 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92890799462?pwd=Tlp0MGJYRHZld05acWhOK0Vwa0YvZz09)"
  label: caas_03Nov2022
  agenda:
    - title: "JITLink: Native Windows JITing in LLVM"
      speaker: "Sunho Kim, De Anza College, CA"
      description: |
        JITLink is a new JIT linker in LLVM developed to eliminate limitations
        in LLVM's JIT implementation. With JITLink, it is not required to use
        special compilation flags or workarounds to load code into the JIT,
        since most of the object file features including small code model and
        thread local storage are fully implemented. This tutorial will explain
        how to use JITLink by working on a windows JIT application that
        just-in-time links to third-party static libraries. The tutorial will
        also dig into internals of JITLink by working on a JITLink plugin
        managing SEH exception tables.
      slides: "/assets/presentations/S_Kim-Jitlink_Coff.pdf"
      video: "https://youtu.be/_5_gm58sQIg"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_03_11_2022.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 8 Dec 1700

- name: "CaaS Monthly Meeting"
  date: 2022-10-06 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92890799462?pwd=Tlp0MGJYRHZld05acWhOK0Vwa0YvZz09)"
  label: caas_06Oct2022
  agenda:
    - title: "jank: A Clojure dialect on LLVM with gradual typing, a native runtime, and C++ interop"
      speaker: "Jeaye Wilkerson, Technical Director at Electronic Arts (EA)"
      description: |
        Following years of Lisp development, Clojure has entered the scene as a
        practical Lisp for the JVM. It takes a functional-first approach to
        designs and has extensive support for purely transforming persistent,
        immutable data structures. The interactive programming experience
        Clojure brings to the JVM is unmatched, built on both a JIT and
        technology such as nREPL. Clojure developers use this interactive
        programming to build their software from empty source files to working
        servers, GUI applications, and more without restarting the process.

        In the spirit of Clojure, I would like to present jank, a research
        programming language which is a Clojure dialect built on native C++,
        rather than the JVM, using Cling as its JIT compiler. jank aims to be
        strongly compatible with Clojure while offering the same interactive
        programming experience. Like Clojure, jank aims to provide seamless
        interop with its host (meaning C++), allowing for easy consumption of
        third-party libraries. On top of a native runtime, jank also aims to
        provide gradual, structural typing, which will not be covered in this
        presentation.
      slides: "/assets/presentations/J_Wilkerson-Caas_Jank.pdf"
      video: "https://youtu.be/l7KXd76ymVk"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_06_10_2022.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 3 Nov 1700

- name: "CaaS Monthly Meeting"
  date: 2022-09-01 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/97839750473?pwd=V3dVRTl6ekN5UEdURTRvTHZPQ25Wdz09)"
  label: caas_01Sep2022
  agenda:
    - title: Update
      speaker: Vassil
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 6 Oct 1700

- name: "CaaS Monthly Meeting"
  date: 2022-08-04 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/97839750473?pwd=V3dVRTl6ekN5UEdURTRvTHZPQ25Wdz09)"
  label: caas_04Aug2022
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_04_08_2022.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 1 Sep 1700

- name: "CaaS Monthly Meeting"
  date: 2022-07-07 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/97839750473?pwd=V3dVRTl6ekN5UEdURTRvTHZPQ25Wdz09)"
  label: caas_07Jul2022
  agenda:
    - title: Update
      speaker: Ioana
      slides: "/assets/presentations/CaaS_07_07_2022.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Ioana
      link: 4 Aug 1700

- name: "CaaS Monthly Meeting"
  date: 2022-06-09 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/97839750473?pwd=V3dVRTl6ekN5UEdURTRvTHZPQ25Wdz09)"
  label: caas_09Jun2022
  agenda:
    - title: "Cling for live coding music and musical instruments"
      speaker: "Jack Armitage, Intelligent Instruments Lab"
      description: |
        The artistic live coding community has been growing steadily since
        around the year 2000. The Temporary Organisation for the Permanence of
        Live Art Programming (TOPLAP) has been around since 2004, Algorave
        (algorithmic rave parties) recently celebrated its tenth birthday, and
        six editions of the International Conference on Live Coding (ICLC) have
        been held. A great many live coding systems have been developed during
        this time, many of them exhibiting exotic and culturally specific
        features that professional software developers are mostly unaware of.
        This talk will introduce the artistic live coding context and
        community, and then describe attempts by this community to appropriate
        the Cling C++ interpreter for artistic practice. In one such example,
        Cling has been used as the basis for a C++ based live coding
        synthesiser [1]. In another example, Cling has been installed on a
        BeagleBoard to bring live coding to the Bela interactive audio
        platform [2]. Following these examples, I will offer some reflections
        on the potential mutual benefits for increased engagement between the
        Cling community and the artistic live coding community.

        [1] [tiny spectral synthesizer with livecoding support](https://github.com/nwoeanhinnogaehr/tinyspec-cling)\
        [2] [Using the Cling C++ Interpreter on the Bela Platform](https://gist.github.com/jarmitage/6e411ae8746c04d6ecbee1cbc1ebdcd4)
      slides: "/assets/presentations/J_Armitage-CaaS_Live_Coding_Music.pdf"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_09_06_2022.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 7 Jul 1700

- name: "CaaS Monthly Meeting"
  date: 2022-05-05 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92393493356?pwd=SHYxY0MxdFNPZm5wdzRCeDZxK3VYQT09)"
  label: caas_05May2022
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_05_05_2022.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 9 Jun 1700

- name: "CaaS Monthly Meeting"
  date: 2022-04-07 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92393493356?pwd=SHYxY0MxdFNPZm5wdzRCeDZxK3VYQT09)"
  label: caas_07Apr2022
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_07_04_2022.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 5 May 1700

- name: "CaaS Monthly Meeting"
  date: 2022-03-10 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92393493356?pwd=SHYxY0MxdFNPZm5wdzRCeDZxK3VYQT09)"
  label: caas_10Mar2022
  agenda:
    - title: "ez-clang: experimental C++ REPL for bare metal"
      speaker: "Stefan Gränitz, LLVM Orc JIT developer"
      description: |
        In 2021 a new remote-JIT layer "RemoteEPC" landed in LLVM's OrcJIT
        library [0]. It separates serialization from transport, streamlines
        error behavior and integrates well with ExecutorProcessControl. Combined
        with the clean design  and extensibility of ORCv2 and JITLink, it lowers
        the bar for building exotic out-of-process LLVM bitcode JITs.

        The ez-clang project [1] makes use of all these to build a pure
        out-of-process REPL specifically designed for very low-resource embedded
        devices. The executor endpoint on the device is very simple and fits
        into a few Kilobytes of memory. All heavy lifting happens in the JIT
        process on the host.

        I want to present my proof-of-concept implementation, which is based on
        a hacked-up version of cling [2] (bringing in Clang-integration, a
        command line and the concept of transaction-based incremental
        compilation). Right now, it supports a small selection of Cortex-M
        development boards. The smallest is the TeensyLC [3] with an ARMv6-M
        instruction set, 62kb Flash memory and 8kb RAM.
        \
        [0] [https://github.com/llvm/llvm-project/commit/bb27e4564355](https://github.com/llvm/llvm-project/commit/bb27e4564355)\
        [1] [https://echtzeit.dev/ez-clang](https://echtzeit.dev/ez-clang)\
        [2] [https://github.com/root-project/cling](https://github.com/root-project/cling)\
        [3] [https://www.pjrc.com/teensy/teensyLC.html](https://www.pjrc.com/teensy/teensyLC.html)
      slides: "/assets/presentations/S_Graenitz-CaaS_EzClang.pdf"
      video: "https://youtu.be/gKNxTeDBczk"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_10_03_2022.pdf"
    - title: Round Table
    - title: Next meeting
      link: 7 Apr 1700

- name: "CaaS Monthly Meeting"
  date: 2022-02-03 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92393493356?pwd=SHYxY0MxdFNPZm5wdzRCeDZxK3VYQT09)"
  label: caas_03Feb2022
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_03_02_2022.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 10 Mar 1700

- name: "CaaS Monthly Meeting"
  date: 2022-01-13 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92393493356?pwd=SHYxY0MxdFNPZm5wdzRCeDZxK3VYQT09)"
  label: caas_13Jan2022
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_13_01_2022.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 3 Feb 1700

- name: "CaaS Monthly Meeting"
  date: 2021-12-09 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92544354004?pwd=ajFYajc5bnhFWXBOdFVrMXdFRSt3Zz09)"
  label: caas_09Dec2021
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_09_12_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 13 Jan 1700

- name: "CaaS Monthly Meeting"
  date: 2021-11-11 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92544354004?pwd=ajFYajc5bnhFWXBOdFVrMXdFRSt3Zz09)"
  label: caas_11Nov2021
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_11_11_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 9 Dec 1700

- name: "CaaS Monthly Meeting"
  date: 2021-10-07 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92544354004?pwd=ajFYajc5bnhFWXBOdFVrMXdFRSt3Zz09)"
  label: caas_07Oct2021
  agenda:
    - title: "Proposal for a C++ Language Interoperability Layer"
      speaker: "Vassil Vassilev, Princeton"
      description: |
        The C++ programming language is used for many numerically intensive
        scientific applications. A combination of performance and solid backward
        compatibility has led to its use for many research software codes over
        the past 20 years. Despite its power, C++ is often seen as difficult to
        learn and inconsistent with rapid application development. Exploration
        and prototyping is slowed down by the long edit-compile-run cycles
        during development. Exploratory programming is an effective way to gain
        a deeper understanding of a project's requirements; reduce the
        complexity of a problem; and provide an early validation of the system’s
        design and implementation. This is amongst the strengths of Python and a
        major design goal of new languages such as Julia, D and Swift.

        Two of the most widely used languages by researchers are C++ and Python.
        Python has grown steadily as a language of choice for data science and
        application control. The interactive nature of Python and its many
        available libraries make it an excellent choice for scripting tasks and
        code prototyping. However, native computational performance of Python is
        mediocre. Python includes functionality for replacing the most critical
        components of a processing kernel with implementations in C. This
        functionality is insufficient to fully cover many scientific use cases
        because crossing the language boundary is expensive due to limitations
        in current tools.

        This talk describes key aspects of language interoperability for C++
        using an automated binding approach. The primary initial focus is to
        support automatic binding to and from Python. Furthermore, the approach
        is generic enough to fit other languages such as D and Julia.
      slides: "/assets/presentations/V_Vassilev-CaaS_LibInterOp.pdf"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_07_10_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 4 Nov 1700

- name: "CaaS Monthly Meeting"
  date: 2021-09-02 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92544354004?pwd=ajFYajc5bnhFWXBOdFVrMXdFRSt3Zz09)"
  label: caas_02Sep2021
  agenda:
    - title: "Cppyy"
      speaker: "Wim Lavrijsen, LBL"
      description: |
        cppyy provides automatic Python bindings to C++ code, at runtime,
        through Cling, the C++ interpreter. Python is itself a dynamic language
        executed by an interpreter, thus the interaction with C++ code becomes
        more natural when intermediated by Cling. Examples include runtime
        template instantiations, callbacks, cross-language inheritance,
        automatic downcasting, and exception mapping. Many advanced C++ features
        such as placement new, multiple virtual inheritance, variadic templates,
        etc., are also naturally handled.

        cppyy achieves high performance through an all-lazy approach and
        specialization of common cases through runtime reflection. As such, it
        has a much lower call overhead than other binders, notably in its
        implementation for PyPy, a fully compatible Python interpreter sporting
        a tracing JIT. Furthermore, cppyy makes maintaining a large software
        stack simpler: except for cppyy’s own python-interpreter binding, it
        does not have any compiled code that is Python-dependent. I.e.,
        cppyy-based extension modules require no recompilation when switching
        Python interpreters.

        In this presentation I'll show the benefits of runtime Python-C++
        bindings and give a bird's eye overview of the implementation
        underpinning cppyy.
      slides: "/assets/presentations/W_Lavrijsen-CaaS_Cppyy.pdf"
      video: "https://youtu.be/stMD7VDWlVU"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_02_09_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 7 October 1700

- name: "CaaS Monthly Meeting"
  date: 2021-08-05 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92544354004?pwd=ajFYajc5bnhFWXBOdFVrMXdFRSt3Zz09)"
  label: caas_05Aug2021
  agenda:
    - title: "A brief history of Cxx.jl"
      speaker: "Keno Fischer, JuliaComputing"
      description: |
        Cxx.jl is one of the oldest Julia packages and provides extremely tight
        integration between Julia and C++. With advanced features including a
        C++, REPL environment, the ability to perform cross-language template
        instantiation as well as cross-language object implementation, it is a
        powerful tool for developers seeking to integrate the two languages.
        However, despite these capabilities, the package never fully became
        mainstream due to a number of technical limitations. In this talk, I
        will explore the design and featureset of Cxx.jl, and what limitations
        in Clang and Julia prevented its full adoption in the Julia world.
      slides: "/assets/presentations/K_Fischer_Cxx_jl.pdf"
      video: "https://youtu.be/bJiwjKIWgjM"
    - title: "Calling ROOT from Julia in practice"
      speaker: "Oliver Schulz, Max-Planck-Institut für Physik"
      description: |
        Julia can directly call C++ via the Cxx.jl package. This enables is to
        use basically all of ROOT's capabilities directly from Julia, including
        reading/writing TFiles and user ROOT's GUI features. I'll present some
        past experiences and practical examples of Julia/ROOT interaction.
      slides: "/assets/presentations/O_Schulz-Julia_ROOT.pdf"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_05_08_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 2 September 1700

- name: "CaaS Monthly Meeting"
  date: 2021-07-01 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92544354004?pwd=ajFYajc5bnhFWXBOdFVrMXdFRSt3Zz09)"
  label: caas_01Jul2021
  agenda:
    - title: "ORC 2021 -- Recent developments and future work in LLVM's JIT APIs"
      speaker: "Lang Hames, Apple"
      description: |
        LLVM’s On Request Compilation (ORC) APIs provide a foundation for
        building in-memory and just-in-time compilers by re-using existing
        static compilers. This re-use is enabled by appending a new linking
        step to the standard compiler pipeline to patch the compiler output into
        the executing process. The ORC APIs support concurrent compilation, lazy
        compilation, and linking of code across process boundaries and even
        across architectures. The ORC APIs are already used in several open
        source projects including PostgreSQL, Cling, Julia, and the Swift
        interpreter; and they remain under active development with new features
        added frequently. This talk will provide an overview of the ORC APIs and
        recent developments, as well as demos and pointers to example code.
      slides: "/assets/presentations/L_Hames-CaaS_ORC_JitLink.pdf"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_01_07_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 5 August 1700

- name: "CaaS Monthly Meeting"
  date: 2021-06-03 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92544354004?pwd=ajFYajc5bnhFWXBOdFVrMXdFRSt3Zz09)"
  label: caas_03Jun2021
  agenda:
    - title: "Cymbl: To -jInfinity & Beyond"
      speaker: "William Moses, MIT"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_03_06_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 1 July 1700

- name: "CaaS Monthly Meeting"
  date: 2021-05-06 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/92544354004?pwd=ajFYajc5bnhFWXBOdFVrMXdFRSt3Zz09)"
  label: caas_06May2021
  agenda:
    - title: "GPU Acceleration of Automatic Differentiation in C++ with Clad"
      speaker: "Ioana Ifrim, Princeton"
      slides: "/assets/presentations/I_Ifrim-GPU_AD.pdf"
      video: "https://youtu.be/wberEoq-m38"
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_06_05_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 3 June 1700

- name: "CaaS Monthly Meeting"
  date: 2021-03-25 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/98188314867?pwd=Q2tJWlN1Qkk0eStJc3lCWnRvQ250QT09)"
  label: caas_25Mar2021
  agenda:
    - title: "Deep dive into the Xeus-based Cling kernel for Jupyter"
      speaker: "Sylvain Corlay, QuantStack"
      slides: "/assets/presentations/S_Corlay-CaaS_Xeus-Cling.pdf"
      video: https://youtu.be/kx3wvKk4Qss
      description: |
        Sylvain Corlay from QuantStack talks about C++ in Jupyter Notebooks
        using the Xeus-Cling. Xeus-Cling is a Cling-based notebook kernel which
        delivers interactive C++. Sylvain makes a deep dive in topic outlining
        some of the specific challenges and requirements.
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_25_03_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 6 May 1700


- name: "CaaS Monthly Meeting"
  date: 2021-03-04 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/98188314867?pwd=Q2tJWlN1Qkk0eStJc3lCWnRvQ250QT09)"
  label: caas_04Mar2021
  agenda:
    - title: "Cling’s CUDA Backend: Interactive GPU development with CUDA C++"
      speaker: "Simeon Ehrig, HZDR"
      slides: "/assets/presentations/S_Ehrig-CaaS_Cling-CUDA.pdf"
      video: https://youtu.be/HEGDII5lAfo
      description: |
        Simeon Ehrig from Helmholtz-Zentrum Dresden-Rossendorf (HZDR) shared his
        work with us recently. In his talk he gives insights about interactive
        CUDA using the C++ interpreter Cling. He shows several exciting examples
        in the area of dynamic execution without loss of state where we can
        "checkpoint" the execution state, add specific data analysis and reuse
        the previous computations.
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_04_03_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 25 Mar 1700


- name: "CaaS Monthly Meeting"
  date: 2021-02-04 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/98188314867?pwd=Q2tJWlN1Qkk0eStJc3lCWnRvQ250QT09)"
  label: caas_04Feb2021
  agenda:
    - title: "Calling C++ libraries from a D-written DSL: A cling/cppyy-based approach"
      speaker: Alexandru Militaru
      slides: "/assets/presentations/A_Militaru-Calling_Cpp_libraries_from_a_D-written_DSL.pdf"
      video: https://youtu.be/7teqrCNzrD8
      description: |
        Alexandru Militaru shared his work with us recently. In his talk he
        gives insights about C++/D interoperability on the fly using the
        interactive C++ interpreter Cling and cppyy.
    - title: "Calling C++ libraries from a D-written DSL: A cling/cppyy-based approach. Demo"
      speaker: Alexandru Militaru
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_04_02_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 04 Mar 1700

- name: "CaaS Monthly Meeting"
  date: 2021-01-14 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/99436382635?pwd=NEhzdkhLbTBhdDBBc0tpK3FSLzFpdz09)"
  label: caas_14Jan2021
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_14_01_2021.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 04 Feb 1700

- name: "CaaS Monthly Meeting"
  date: 2020-12-03 17:00:00 +0200
  time_cest: "17:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/99436382635?pwd=NEhzdkhLbTBhdDBBc0tpK3FSLzFpdz09)"
  label: caas_03Dec2020
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_03_12_2020.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: 14 January 1700

- name: "CaaS Monthly Meeting"
  date: 2020-10-22 18:00:00 +0200
  time_cest: "18:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/98806538025?pwd=Mjlnb2cvemdYYTM4TDVWNUNTNUNDUT09)"
  label: caas_22Oct2020
  agenda:
    - title: Update
      speaker: Vassil
      slides: "/assets/presentations/CaaS_22_10_2020.pdf"
    - title: Round Table
    - title: Next meeting
      speaker: Vassil
      link: "[Doodle pool for week of November 30](https://doodle.com/poll/bkkahvx9d5rrbka2)"

- name: "CaaS Monthly Meeting"
  date: 2020-09-17 18:00:00 +0200
  time_cest: "18:00"
  connect: "[Link to zoom](https://princeton.zoom.us/j/98806538025?pwd=Mjlnb2cvemdYYTM4TDVWNUNTNUNDUT09)"
  label: caas_17Sept2020
  agenda:
    - title: Project introduction
      speaker: Vassil
      slides: "https://drive.google.com/file/d/1YF6B2VkeOGsWKz7GRZQTf-C0myq2Dh3I"
    - title: Round Table
